---
import type { Course } from "../types/course";
import CourseCard from "./CourseCard.astro";

interface Tag {
  text: string;
  color: string;
}


interface Props {
  courses: Course[];
  categories: string[];
}

const { courses, categories } = Astro.props;
---

<div>
  <!-- Filters: Search Input & Category Select -->
  <div class="flex flex-col md:flex-row justify-between items-center gap-4 my-8 w-3/5 ">
    <input
      id="searchInput"
      type="text"
      placeholder="Search courses..."
      class="w-full md:flex-1 px-4 py-3 border border-gray-300/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition bg-gray-800/70 text-white"
    />

    <select
      id="categorySelect"
      class="w-full md:w-2/5 px-4 py-3.5 border border-gray-300/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition bg-gray-800/70 text-white"
    >
      <option value="">All Categories</option>
      {categories.map((category) => (
        <option value={category}>{category}</option>
      ))}
    </select>
  </div>

  <!-- Course Grid -->
  <div id="courseGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {courses.map((course) => (
      <CourseCard course={course}  />
    ))}
  </div>
</div>

<script type="module">
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const categorySelect = document.getElementById('categorySelect');
    const courseGrid = document.getElementById('courseGrid');
    
    function filterCourses() {
      const query = searchInput.value.toLowerCase().trim();
      const selectedCategory = categorySelect.value;
      const courseCards = courseGrid.querySelectorAll('.course-card-wrapper');

      courseCards.forEach((card) => {
        const title = card.dataset.title || '';
        const categories = card.dataset.category || '';
        console.log("Title:", title);
        console.log("Categories:", categories);
        console.log("Dataset :", card.dataset);

        const matchesSearch = title.includes(query);
        const matchesCategory = selectedCategory === '' || categories.includes(selectedCategory);

        if (matchesSearch && matchesCategory) {
          card.style.display = '';
        } else {
          card.style.display = 'none';
        }
      });
    }

    if (searchInput && categorySelect) {
      searchInput.addEventListener('input', filterCourses);
      categorySelect.addEventListener('change', filterCourses);
    }
  });
</script>
